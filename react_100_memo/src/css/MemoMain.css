header {
  border: 1px solid #ddd;
  padding: 0.7rem;
  margin-top: 30px;
  font-weight: bold;
}
footer {
  text-align: center;
  background-color: #6f8fe7;
  color: white;
  padding: 0.3rem;
}
section.main {
  display: flex;
}
div.aside {
  flex: 1;
  padding: 1rem;
  &:nth-of-type(1) {
    border-right: 1px solid #ddd;
  }
}
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
html {
  height: 100vh;
}
body {
  height: 100%;
}
header,
footer,
section.main {
  width: 60%;
  margin: 10px auto;
}
/*
input tag는 기본형이 inline-block
input tag를 flex box로 감싸면
성질이 flex-item이 되어야 한다
input tag가 1개만 있을때는 layout 구현에 문제가 없었다
input tag가 2개 이상 다수가 나열될 경우
flex-item 성질을 갖지 않는다 여전히 inline-block 성질을 유지한다

속성중에 flex : 1 또는 flex : 100%와 같은 성질이 적용이 안된다
flex box(container)에 다수의 input tag를 같은 크기로 배치하려면 width값을 %로 지정해야 한다
*/

form.date {
  display: flex;
  /* flex container에 gap 설정하기
    flex-item 둘 간의 간격을 주기 위해 보통 margin을 설정한다
    margin을 설정하면 좌우,상하 끝에 margin이 적용되어
    전체적인 layout이 다소 보기 싫은 현상이 나타난다
    이때 flex container에 gap를 설정하면
    flex-item들 끼리만 마진이 주어지고 좌우, 상하에는 margin이 적용되지 않아
    layout을 유지할 수 있다
    */
  gap: 5px;
  input {
    width: 100%;
    padding: 5px;
    /* margin: 0 3px; */
  }
}
ul {
  list-style: none;
  li {
    box-shadow: 2px 2px 2px 2px #ddd, 2px 2px 2px 2px #aaa;
    margin: 10px 0;
    padding: 5px;
    line-height: 2.2rem;
    img {
      margin: 6px 5px -3px 5px;
    }
    &:hover {
      background-color: #eee;
      cursor: pointer;
    }
  }
}
form.input {
  display: flex;
  flex-direction: column;
  input {
    width: 100%;
    padding: 5px;
    margin: 3px 0;
  }
}
